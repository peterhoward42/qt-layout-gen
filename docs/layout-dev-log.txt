*  Reboot with new contract
*  Go back to integrate with api and get that working
*  Ditch all the redundant lib stuff
*  Any redundant files / code?
*  Get ALL tests working
*  Resume working up contract
*  No keywords
o  Stretch and setTitle o  Wider widget set support incl setText / setTitle o  Harvest as table
    o  Make a test that exercises just about every type incl adding children and text to see what happens
        o  Start by experimenting
            *  Divert to add unit tests for setWidget on scroll area
            *  and setTitle on groupbox
            *  Include line in wrapped error message.
            *  Add types of child parent in error messages like could not add this child
            *  Not barfing at relative indent of 1
            o  Divert to overwrite as helper
                *  Push assertions and checks into helper module
                *  Top down from api
                *  Put in proper exception handling for IO
                o  Finish behaviour below
                    *  manual
                    o  file version
                        o  leave existing code lying around but replicate as
                           completely separate addon
                            o  refactor builder to have split components
                               function, inf act line parser module
                                o  lost check for tabs
                        o  ditch old code
                        o  pass option thru with default and act on it
                            o  split and dupe overwriter as auto_formatter and saver
                        o  comment
                        o  default but defeatable
                        o  tests
                    o  copy and paste version
                o  What tests
                o  Manual
                o  What about from big string?
            o  Have to disallow mid line comments
            o  Scroll area may need resize child? and similar exceptions.
            o  What gives slider - going vert?
    o  Consider section in manual for how addchild augments single argument
    o  Fixed stretch?
    o  Test of very large range of add children
o  Unicode settext and thus unicode icons

o  Laters
o  Quality


o  Later
    o  Version contract
    o  Spit back out would be nice
    o  Publish dumped layouts created api?
    o  Spread use of fuzzy equality of multiline strings
    o  Note synth of tab name for addTab
    o  Qt versions
    o  Licence and copyright
    o  Python 3 support
    o  PyQt support
    o  Unify use of multiline tests and generation.
    o  Move all regex into module
    o  Revisit addStretch - had to drop
    o  Viable to put on PyPy
    o  Does user have to make sure qt gui imported at time? = no,
            we import * in qtobject maker.
    o  What other types to support?
        o  include setText + setTitle
        o  lineedit, combo, splitter, radio, groupbox


o  Make examples as proper tests incl name and folder

        o  tests that test errors by catching exceptions should throw exception if not thrown
        o  80 columns and '\n'.join... idiom
        o  example formats to error messages
        o  ditch _ classes convention
        o  cope with group boxes
            o  first class
            o  examples
            o  add text to
        o  add strings to labels, buttons and group boxes
        o  beautify
        o  no warnings
        o  real world try

                try:
            app = QApplication([])
            kk
        except RuntimeError:
            pass # Singleton already existso  docco

-----------------------------------------------------------------------------
List of widgets
-----------------------------------------------------------------------------
    @classmethod
    def _tidy_and_overwrite(cls, provenance):
        # save orig file to temp
        # retreive ideal column to start type word part
        # open file for write with
        # for each orig line
        #   if contains adjust handles
        #       replace adjust handles span with right length
        #       write them to the file
        #   else
        #       write original line to file
-----------------------------------------------------------------------------
Write back out
-----------------------------------------------------------------------------
file vs text
    file fine going to local data as is
    text -> to clipboard if requested, but has to be pastable
optionality
    by default on
    turn off with extra arg to build
pub backup location
    file add to comment
    just manual for text
