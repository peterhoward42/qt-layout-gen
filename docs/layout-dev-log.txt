*  Reboot with new contract
*  Go back to integrate with api and get that working
*  Ditch all the redundant lib stuff
*  Any redundant files / code?
*  Get ALL tests working
*  Resume working up contract
*  No keywords
*  Experimental usage / lessons learned
o  Decide what lessons learned
    *  Set layout on qlabel - just caution
    *  Treat overwriting of path as an error.
    o  Add QSpacerItem(0,0)
        o  Docco
o  Update docco to suit lessons learned at bottom
o  Revisit mockup to showcase what is supported

o  Consider section in manual for how addchild augments single argument
o  Unicode settext and thus unicode icons?

o  Laters
o  Quality


o  Later
    o  Version contract
    o  Spread use of fuzzy equality of multiline strings
    o  Note synth of tab name for addTab
    o  Make sure all examples from the manual are tested
    o  Qt versions
    o  Licence and copyright
    o  Python 3 support
    o  Qt5 support
    o  Test on Linux
    o  PyQt support
    o  Unify use of multiline tests and generation.
    o  Move all regex into module
    o  Revisit addStretch - had to drop
    o  Viable to put on PyPy
    o  Does user have to make sure qt gui imported at time? = no,
            we import * in qtobject maker.
    o  What other types to support?
        o  include setText + setTitle
        o  lineedit, combo, splitter, radio, groupbox


o  Make examples as proper tests incl name and folder

        o  tests that test errors by catching exceptions should throw exception if not thrown
        o  80 columns and '\n'.join... idiom
        o  example formats to error messages
        o  ditch _ classes convention
        o  cope with group boxes
            o  first class
            o  examples
            o  add text to
        o  add strings to labels, buttons and group boxes
        o  beautify
        o  no warnings
        o  real world try

                try:
            app = QApplication([])
            kk
        except RuntimeError:
            pass # Singleton already existso  docco

-----------------------------------------------------------------------------
List of widgets
-----------------------------------------------------------------------------
    @classmethod
    def _tidy_and_overwrite(cls, provenance):
        # save orig file to temp
        # retreive ideal column to start type word part
        # open file for write with
        # for each orig line
        #   if contains adjust handles
        #       replace adjust handles span with right length
        #       write them to the file
        #   else
        #       write original line to file
-----------------------------------------------------------------------------
QCalendarWidget
QCheckBox
QColorDialog
QComboBox
QDateEdit
QDateTimeEdit
QDialog
QGroupBox
QHBoxLayout
QLabel
QLineEdit
QProgressBar
QPushButton
QRadioButton
QSlider
QSpinBox
QSplitter
QStackedLayout
QStatusBar
QTabWidget
QTextEdit
QTimeEdit
QVBoxLayout
QWidget
-----------------------------------------------------------------------------
    o  Lessons learned
        o  adding StretchItem(0, 0) would give us stretch
            o  Yes plus docco
        o  QComboBox would work if we added addItem(text)
            o  Needs fix + docco
        o  Scroll area may need resize child? and similar exceptions.
            o  Try first
        o  What gives slider - going vert?
            o  Look into
        o  Could do wizard and adding wizard pages if added addPage or whatever
            o  Too minority
        o  Doc explain which things no good incl model based views
            o  explain trade off
            o  grid / table
            o  eg treeview, listview
            o  eg menu and main window / docable stuff
