*  Manual note about rules and error handling
o  Go back to gui runner
    *  Revert to timer
    *  Reformat done message lost cos gets built
    *  Make attribs of common controls instead of gettingall time
    *  Prettify
    o  Tests?
      *  Make list of logic
      *  Decide which are redundant
      o  design setup
        o  test setup should terminate any running qapp
        o  anticipate input files in test data
    o  doc

o  Decide what to do about fonts and colours
o  Finish demo example
o

    o  test when works
        o  overwrite tricky
            *  is overwrite demanding to succeed? = yes
            o  neither vi nor pycharm alert you to reload file immediately
        o  position of window and on top
    o  test when fails
*  Revisit mockup to showcase what is supported
o  font etc inline?

o  k

o  Start working up
    o  Do footer
    o  It has to look perfect to wash


o  Bugs
    o  Try this input.
        o  bar       QPushButton(Worl)d
        o  thinks qpushbuttond is a type


o  Laters
o  Quality
    o  Any modules getting too big or too small?
    o  Comments
    o  PEP8
    o  PyDoc on api and tools
    o  Manual edit / review
        o  Split into sections
        o  Include pictures
        o  Have TOC with links


o  Later
    o  Version contract
    o  Product versions like pycharm eg 2017.1
    o  Spread use of fuzzy equality of multiline strings
    o  Make sure all examples from the manual are tested
    o  Qt versions
    o  Licence and copyright
    o  Python 3 support
    o  Qt5 support
    o  Test on Linux
    o  PyQt support
    o  Unify use of multiline tests and generation.
    o  Move all regex into module
    o  Viable to put on PyPy
    o  What other types to support?
        o  lineedit, combo, splitter, radio, groupbox


o  Make examples as proper tests incl name and folder

        o  tests that test errors by catching exceptions should throw exception if not thrown
        o  80 columns and '\n'.join... idiom
        o  ditch _ classes convention
        o  beautify
        o  no warnings

------------------------------------------------------------------------
Gui helper tests
------------------------------------------------------------------------
explain mainly for regression sweep across python versions, pyqt and pyside,
and os.
ones own build created viable artefacts and init behaviour
timer is repeating
modified file gets build and shown
file wont build get error shown
path label reflects input path and is coloured
settings lifecycle is used
skips build with explanation when finds file locked
copes with layout or widget
is updated copes with no input file set
is updated copes says no, catching io exceptions
reformat does and sends messagebox
error logged when cannot reformat cos wont build
paths less than 30

